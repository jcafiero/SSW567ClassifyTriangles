What challenges did you encounter with this assignment, if any?
-One challenge I encountered was trying to decide how to sufficiently test this program. It was a little confusing starting from code that we were told was buggy, so it took some time to find this issue. But then also I had to take extra time to make sure I had tested the code to make sure that I fixed the issues.
What did you think about the requirements specification for this assignment?
-I thought that the requirements could have been clearer for this assignment. I started development by classifying if the triangles were Equilateral, Scalene, Isoceles, *OR* Right before realizing I missed the slight wording that a triangle can be Right *AND* also classified by its side lengths. I think I was also partially thrown off, because in the sample code, there are docstrings and a unit test in testSet1 that only specify to see if a triangle is Right.
What challenges did you encounter with the tools?
-I was a little unfamiliar with unittesting in Python so there was a learning curve with using this tool. I kept it simple for the individual unit tests, asserting whether or not a certain output should be Equal or NotEqual to a specified string.
Describe the criteria you used to determine that you had sufficient test cases, i.e. how did you know you were done?
-To make sure that I had sufficient test cases, I made sure to test for each classification of a triangle, that I tested some positive tests (where the expected output is correct) and some negative tests (where the 'expected output' is not correct and specify what the output should be). I also included certain tests that are impossible, like a triangle just being Right without another classification or a triangle being Equilateral and Right when that is mathematically impossible. We could always go back and add more test cases, but I think too much more testing would be extraneous.